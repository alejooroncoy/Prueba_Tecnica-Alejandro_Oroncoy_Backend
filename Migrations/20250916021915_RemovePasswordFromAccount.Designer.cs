// <auto-generated />
using System;
using GameRouletteBackend.Shared.Infrastructure.Persistence.EFC.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameRouletteBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250916021915_RemovePasswordFromAccount")]
    partial class RemovePasswordFromAccount
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("GameRouletteBackend.IAM.Domain.Model.Aggregates.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("role");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.Property<Guid>("Uid")
                        .HasColumnType("char(36)")
                        .HasColumnName("uid");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("p_k_accounts");

                    b.HasAlternateKey("Uid")
                        .HasName("a_k_accounts_uid");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("i_x_accounts_name");

                    b.HasIndex("Role")
                        .HasDatabaseName("i_x_accounts_role");

                    b.HasIndex("Status")
                        .HasDatabaseName("i_x_accounts_status");

                    b.HasIndex("Uid")
                        .IsUnique()
                        .HasDatabaseName("i_x_accounts_uid");

                    b.ToTable("accounts", (string)null);
                });

            modelBuilder.Entity("GameRouletteBackend.IAM.Domain.Model.Aggregates.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AccountUid")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_uid");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("balance");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<Guid>("Uid")
                        .HasColumnType("char(36)")
                        .HasColumnName("uid");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("p_k_users");

                    b.HasIndex("AccountUid")
                        .IsUnique()
                        .HasDatabaseName("i_x_users_account_uid");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("i_x_users_name");

                    b.HasIndex("Uid")
                        .IsUnique()
                        .HasDatabaseName("i_x_users_uid");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("GameRouletteBackend.Roulette.Domain.Model.Aggregates.Bet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<Guid>("BetId")
                        .HasColumnType("char(36)")
                        .HasColumnName("bet_id");

                    b.Property<string>("BetType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("bet_type");

                    b.Property<string>("Color")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("color");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("EvenOdd")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("even_odd");

                    b.Property<Guid>("GameId")
                        .HasColumnType("char(36)")
                        .HasColumnName("game_id");

                    b.Property<bool?>("IsWinning")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_winning");

                    b.Property<int?>("Number")
                        .HasColumnType("int")
                        .HasColumnName("number");

                    b.Property<Guid>("UserUid")
                        .HasColumnType("char(36)")
                        .HasColumnName("user_uid");

                    b.Property<decimal?>("WinningsAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("winnings_amount");

                    b.HasKey("Id")
                        .HasName("p_k_bets");

                    b.HasIndex("BetId")
                        .IsUnique()
                        .HasDatabaseName("i_x_bets_bet_id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("i_x_bets_created_at");

                    b.HasIndex("GameId")
                        .HasDatabaseName("i_x_bets_game_id");

                    b.HasIndex("UserUid")
                        .HasDatabaseName("i_x_bets_user_uid");

                    b.ToTable("bets", (string)null);
                });

            modelBuilder.Entity("GameRouletteBackend.Roulette.Domain.Model.Aggregates.RouletteGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset?>("CompletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("completed_at");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<Guid>("GameId")
                        .HasColumnType("char(36)")
                        .HasColumnName("game_id");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_completed");

                    b.Property<string>("WinningColor")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("winning_color");

                    b.Property<int?>("WinningNumber")
                        .HasColumnType("int")
                        .HasColumnName("winning_number");

                    b.HasKey("Id")
                        .HasName("p_k_roulette_games");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("i_x_roulette_games_created_at");

                    b.HasIndex("GameId")
                        .IsUnique()
                        .HasDatabaseName("i_x_roulette_games_game_id");

                    b.ToTable("roulette_games", (string)null);
                });

            modelBuilder.Entity("GameRouletteBackend.IAM.Domain.Model.Aggregates.User", b =>
                {
                    b.HasOne("GameRouletteBackend.IAM.Domain.Model.Aggregates.Account", null)
                        .WithOne("User")
                        .HasForeignKey("GameRouletteBackend.IAM.Domain.Model.Aggregates.User", "AccountUid")
                        .HasPrincipalKey("GameRouletteBackend.IAM.Domain.Model.Aggregates.Account", "Uid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_users_accounts_account_uid");
                });

            modelBuilder.Entity("GameRouletteBackend.IAM.Domain.Model.Aggregates.Account", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
